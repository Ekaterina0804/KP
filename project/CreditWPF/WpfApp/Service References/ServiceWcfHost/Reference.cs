//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp.ServiceWcfHost {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Condition", Namespace="http://schemas.datacontract.org/2004/07/WcfHost.Domain.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Condition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConditionCredit", Namespace="http://schemas.datacontract.org/2004/07/WcfHost.Domain.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ConditionCredit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfApp.ServiceWcfHost.Condition ConditionObjField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfApp.ServiceWcfHost.Credit CreditObjField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdConditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdCreditField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfApp.ServiceWcfHost.Condition ConditionObj {
            get {
                return this.ConditionObjField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionObjField, value) != true)) {
                    this.ConditionObjField = value;
                    this.RaisePropertyChanged("ConditionObj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfApp.ServiceWcfHost.Credit CreditObj {
            get {
                return this.CreditObjField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditObjField, value) != true)) {
                    this.CreditObjField = value;
                    this.RaisePropertyChanged("CreditObj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Data {
            get {
                return this.DataField;
            }
            set {
                if ((this.DataField.Equals(value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdCondition {
            get {
                return this.IdConditionField;
            }
            set {
                if ((this.IdConditionField.Equals(value) != true)) {
                    this.IdConditionField = value;
                    this.RaisePropertyChanged("IdCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdCredit {
            get {
                return this.IdCreditField;
            }
            set {
                if ((this.IdCreditField.Equals(value) != true)) {
                    this.IdCreditField = value;
                    this.RaisePropertyChanged("IdCredit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Credit", Namespace="http://schemas.datacontract.org/2004/07/WcfHost.Domain.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Credit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DataStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StavkaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SummaFullField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SummaMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TermMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfApp.ServiceWcfHost.User UserObjField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DataStart {
            get {
                return this.DataStartField;
            }
            set {
                if ((this.DataStartField.Equals(value) != true)) {
                    this.DataStartField = value;
                    this.RaisePropertyChanged("DataStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUser {
            get {
                return this.IdUserField;
            }
            set {
                if ((this.IdUserField.Equals(value) != true)) {
                    this.IdUserField = value;
                    this.RaisePropertyChanged("IdUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Stavka {
            get {
                return this.StavkaField;
            }
            set {
                if ((this.StavkaField.Equals(value) != true)) {
                    this.StavkaField = value;
                    this.RaisePropertyChanged("Stavka");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SummaFull {
            get {
                return this.SummaFullField;
            }
            set {
                if ((this.SummaFullField.Equals(value) != true)) {
                    this.SummaFullField = value;
                    this.RaisePropertyChanged("SummaFull");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SummaMonth {
            get {
                return this.SummaMonthField;
            }
            set {
                if ((this.SummaMonthField.Equals(value) != true)) {
                    this.SummaMonthField = value;
                    this.RaisePropertyChanged("SummaMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TermMonth {
            get {
                return this.TermMonthField;
            }
            set {
                if ((this.TermMonthField.Equals(value) != true)) {
                    this.TermMonthField = value;
                    this.RaisePropertyChanged("TermMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfApp.ServiceWcfHost.User UserObj {
            get {
                return this.UserObjField;
            }
            set {
                if ((object.ReferenceEquals(this.UserObjField, value) != true)) {
                    this.UserObjField = value;
                    this.RaisePropertyChanged("UserObj");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WcfHost.Domain.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountChildrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfApp.ServiceWcfHost.GroupCreditWorthiness GroupCreditWorthinessObjField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdGroupCreditWorthinessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarriedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RevenueMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountChildren {
            get {
                return this.CountChildrenField;
            }
            set {
                if ((this.CountChildrenField.Equals(value) != true)) {
                    this.CountChildrenField = value;
                    this.RaisePropertyChanged("CountChildren");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fio {
            get {
                return this.FioField;
            }
            set {
                if ((object.ReferenceEquals(this.FioField, value) != true)) {
                    this.FioField = value;
                    this.RaisePropertyChanged("Fio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfApp.ServiceWcfHost.GroupCreditWorthiness GroupCreditWorthinessObj {
            get {
                return this.GroupCreditWorthinessObjField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupCreditWorthinessObjField, value) != true)) {
                    this.GroupCreditWorthinessObjField = value;
                    this.RaisePropertyChanged("GroupCreditWorthinessObj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdGroupCreditWorthiness {
            get {
                return this.IdGroupCreditWorthinessField;
            }
            set {
                if ((this.IdGroupCreditWorthinessField.Equals(value) != true)) {
                    this.IdGroupCreditWorthinessField = value;
                    this.RaisePropertyChanged("IdGroupCreditWorthiness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Married {
            get {
                return this.MarriedField;
            }
            set {
                if ((object.ReferenceEquals(this.MarriedField, value) != true)) {
                    this.MarriedField = value;
                    this.RaisePropertyChanged("Married");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RevenueMonth {
            get {
                return this.RevenueMonthField;
            }
            set {
                if ((this.RevenueMonthField.Equals(value) != true)) {
                    this.RevenueMonthField = value;
                    this.RaisePropertyChanged("RevenueMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sex {
            get {
                return this.SexField;
            }
            set {
                if ((object.ReferenceEquals(this.SexField, value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupCreditWorthiness", Namespace="http://schemas.datacontract.org/2004/07/WcfHost.Domain.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class GroupCreditWorthiness : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxSummaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxSumma {
            get {
                return this.MaxSummaField;
            }
            set {
                if ((this.MaxSummaField.Equals(value) != true)) {
                    this.MaxSummaField = value;
                    this.RaisePropertyChanged("MaxSumma");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Payment", Namespace="http://schemas.datacontract.org/2004/07/WcfHost.Domain.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Payment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfApp.ServiceWcfHost.Credit CreditObjField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LostSummaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MainPayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RepayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SummaMonthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfApp.ServiceWcfHost.Credit CreditObj {
            get {
                return this.CreditObjField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditObjField, value) != true)) {
                    this.CreditObjField = value;
                    this.RaisePropertyChanged("CreditObj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdCredit {
            get {
                return this.IdCreditField;
            }
            set {
                if ((this.IdCreditField.Equals(value) != true)) {
                    this.IdCreditField = value;
                    this.RaisePropertyChanged("IdCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LostSumma {
            get {
                return this.LostSummaField;
            }
            set {
                if ((this.LostSummaField.Equals(value) != true)) {
                    this.LostSummaField = value;
                    this.RaisePropertyChanged("LostSumma");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MainPay {
            get {
                return this.MainPayField;
            }
            set {
                if ((this.MainPayField.Equals(value) != true)) {
                    this.MainPayField = value;
                    this.RaisePropertyChanged("MainPay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberMonth {
            get {
                return this.NumberMonthField;
            }
            set {
                if ((this.NumberMonthField.Equals(value) != true)) {
                    this.NumberMonthField = value;
                    this.RaisePropertyChanged("NumberMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Repay {
            get {
                return this.RepayField;
            }
            set {
                if ((this.RepayField.Equals(value) != true)) {
                    this.RepayField = value;
                    this.RaisePropertyChanged("Repay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SummaMonth {
            get {
                return this.SummaMonthField;
            }
            set {
                if ((this.SummaMonthField.Equals(value) != true)) {
                    this.SummaMonthField = value;
                    this.RaisePropertyChanged("SummaMonth");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupCharacter", Namespace="http://schemas.datacontract.org/2004/07/WcfHost.Domain.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class GroupCharacter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeMinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountChildrenMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountChildrenMinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfApp.ServiceWcfHost.GroupCreditWorthiness GroupCreditWorthinessObjField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdGroupCreditWorthinessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarriedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RevenueYearMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RevenueYearMinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AgeMax {
            get {
                return this.AgeMaxField;
            }
            set {
                if ((this.AgeMaxField.Equals(value) != true)) {
                    this.AgeMaxField = value;
                    this.RaisePropertyChanged("AgeMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AgeMin {
            get {
                return this.AgeMinField;
            }
            set {
                if ((this.AgeMinField.Equals(value) != true)) {
                    this.AgeMinField = value;
                    this.RaisePropertyChanged("AgeMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountChildrenMax {
            get {
                return this.CountChildrenMaxField;
            }
            set {
                if ((this.CountChildrenMaxField.Equals(value) != true)) {
                    this.CountChildrenMaxField = value;
                    this.RaisePropertyChanged("CountChildrenMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountChildrenMin {
            get {
                return this.CountChildrenMinField;
            }
            set {
                if ((this.CountChildrenMinField.Equals(value) != true)) {
                    this.CountChildrenMinField = value;
                    this.RaisePropertyChanged("CountChildrenMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfApp.ServiceWcfHost.GroupCreditWorthiness GroupCreditWorthinessObj {
            get {
                return this.GroupCreditWorthinessObjField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupCreditWorthinessObjField, value) != true)) {
                    this.GroupCreditWorthinessObjField = value;
                    this.RaisePropertyChanged("GroupCreditWorthinessObj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdGroupCreditWorthiness {
            get {
                return this.IdGroupCreditWorthinessField;
            }
            set {
                if ((this.IdGroupCreditWorthinessField.Equals(value) != true)) {
                    this.IdGroupCreditWorthinessField = value;
                    this.RaisePropertyChanged("IdGroupCreditWorthiness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Married {
            get {
                return this.MarriedField;
            }
            set {
                if ((object.ReferenceEquals(this.MarriedField, value) != true)) {
                    this.MarriedField = value;
                    this.RaisePropertyChanged("Married");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RevenueYearMax {
            get {
                return this.RevenueYearMaxField;
            }
            set {
                if ((this.RevenueYearMaxField.Equals(value) != true)) {
                    this.RevenueYearMaxField = value;
                    this.RaisePropertyChanged("RevenueYearMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RevenueYearMin {
            get {
                return this.RevenueYearMinField;
            }
            set {
                if ((this.RevenueYearMinField.Equals(value) != true)) {
                    this.RevenueYearMinField = value;
                    this.RaisePropertyChanged("RevenueYearMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sex {
            get {
                return this.SexField;
            }
            set {
                if ((object.ReferenceEquals(this.SexField, value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://WcfHost/Service/", ConfigurationName="ServiceWcfHost.Service")]
    public interface Service {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetConditions", ReplyAction="http://WcfHost/Service/Service/GetConditionsResponse")]
        WpfApp.ServiceWcfHost.Condition[] GetConditions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetConditions", ReplyAction="http://WcfHost/Service/Service/GetConditionsResponse")]
        System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.Condition[]> GetConditionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetConditionCredits", ReplyAction="http://WcfHost/Service/Service/GetConditionCreditsResponse")]
        WpfApp.ServiceWcfHost.ConditionCredit[] GetConditionCredits();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetConditionCredits", ReplyAction="http://WcfHost/Service/Service/GetConditionCreditsResponse")]
        System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.ConditionCredit[]> GetConditionCreditsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetConditionCreditsByIdCredits", ReplyAction="http://WcfHost/Service/Service/GetConditionCreditsByIdCreditsResponse")]
        WpfApp.ServiceWcfHost.ConditionCredit[] GetConditionCreditsByIdCredits(int idCredit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetConditionCreditsByIdCredits", ReplyAction="http://WcfHost/Service/Service/GetConditionCreditsByIdCreditsResponse")]
        System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.ConditionCredit[]> GetConditionCreditsByIdCreditsAsync(int idCredit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetPayments", ReplyAction="http://WcfHost/Service/Service/GetPaymentsResponse")]
        WpfApp.ServiceWcfHost.Payment[] GetPayments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetPayments", ReplyAction="http://WcfHost/Service/Service/GetPaymentsResponse")]
        System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.Payment[]> GetPaymentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetPaymentsByIdCredit", ReplyAction="http://WcfHost/Service/Service/GetPaymentsByIdCreditResponse")]
        WpfApp.ServiceWcfHost.Payment[] GetPaymentsByIdCredit(int idCredit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetPaymentsByIdCredit", ReplyAction="http://WcfHost/Service/Service/GetPaymentsByIdCreditResponse")]
        System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.Payment[]> GetPaymentsByIdCreditAsync(int idCredit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetCredits", ReplyAction="http://WcfHost/Service/Service/GetCreditsResponse")]
        WpfApp.ServiceWcfHost.Credit[] GetCredits();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetCredits", ReplyAction="http://WcfHost/Service/Service/GetCreditsResponse")]
        System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.Credit[]> GetCreditsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetCreditsByIdUser", ReplyAction="http://WcfHost/Service/Service/GetCreditsByIdUserResponse")]
        WpfApp.ServiceWcfHost.Credit[] GetCreditsByIdUser(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetCreditsByIdUser", ReplyAction="http://WcfHost/Service/Service/GetCreditsByIdUserResponse")]
        System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.Credit[]> GetCreditsByIdUserAsync(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/FirstCredit", ReplyAction="http://WcfHost/Service/Service/FirstCreditResponse")]
        WpfApp.ServiceWcfHost.Credit FirstCredit(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/FirstCredit", ReplyAction="http://WcfHost/Service/Service/FirstCreditResponse")]
        System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.Credit> FirstCreditAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetUsers", ReplyAction="http://WcfHost/Service/Service/GetUsersResponse")]
        WpfApp.ServiceWcfHost.User[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetUsers", ReplyAction="http://WcfHost/Service/Service/GetUsersResponse")]
        System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.User[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/FirstUser", ReplyAction="http://WcfHost/Service/Service/FirstUserResponse")]
        WpfApp.ServiceWcfHost.User FirstUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/FirstUser", ReplyAction="http://WcfHost/Service/Service/FirstUserResponse")]
        System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.User> FirstUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetGroupCharacters", ReplyAction="http://WcfHost/Service/Service/GetGroupCharactersResponse")]
        WpfApp.ServiceWcfHost.GroupCharacter[] GetGroupCharacters();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetGroupCharacters", ReplyAction="http://WcfHost/Service/Service/GetGroupCharactersResponse")]
        System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.GroupCharacter[]> GetGroupCharactersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetGroupCreditWorthinesss", ReplyAction="http://WcfHost/Service/Service/GetGroupCreditWorthinesssResponse")]
        WpfApp.ServiceWcfHost.GroupCreditWorthiness[] GetGroupCreditWorthinesss();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetGroupCreditWorthinesss", ReplyAction="http://WcfHost/Service/Service/GetGroupCreditWorthinesssResponse")]
        System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.GroupCreditWorthiness[]> GetGroupCreditWorthinesssAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/FirstGroupCreditWorthiness", ReplyAction="http://WcfHost/Service/Service/FirstGroupCreditWorthinessResponse")]
        WpfApp.ServiceWcfHost.GroupCreditWorthiness FirstGroupCreditWorthiness(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/FirstGroupCreditWorthiness", ReplyAction="http://WcfHost/Service/Service/FirstGroupCreditWorthinessResponse")]
        System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.GroupCreditWorthiness> FirstGroupCreditWorthinessAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/FirstGroupCreditWorthinessByName", ReplyAction="http://WcfHost/Service/Service/FirstGroupCreditWorthinessByNameResponse")]
        WpfApp.ServiceWcfHost.GroupCreditWorthiness FirstGroupCreditWorthinessByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/FirstGroupCreditWorthinessByName", ReplyAction="http://WcfHost/Service/Service/FirstGroupCreditWorthinessByNameResponse")]
        System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.GroupCreditWorthiness> FirstGroupCreditWorthinessByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/AddUser", ReplyAction="http://WcfHost/Service/Service/AddUserResponse")]
        int AddUser(WpfApp.ServiceWcfHost.User model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/AddUser", ReplyAction="http://WcfHost/Service/Service/AddUserResponse")]
        System.Threading.Tasks.Task<int> AddUserAsync(WpfApp.ServiceWcfHost.User model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/AddGroupCreditWorthiness", ReplyAction="http://WcfHost/Service/Service/AddGroupCreditWorthinessResponse")]
        int AddGroupCreditWorthiness(WpfApp.ServiceWcfHost.GroupCreditWorthiness model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/AddGroupCreditWorthiness", ReplyAction="http://WcfHost/Service/Service/AddGroupCreditWorthinessResponse")]
        System.Threading.Tasks.Task<int> AddGroupCreditWorthinessAsync(WpfApp.ServiceWcfHost.GroupCreditWorthiness model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/AddGroupCharacter", ReplyAction="http://WcfHost/Service/Service/AddGroupCharacterResponse")]
        int AddGroupCharacter(WpfApp.ServiceWcfHost.GroupCharacter model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/AddGroupCharacter", ReplyAction="http://WcfHost/Service/Service/AddGroupCharacterResponse")]
        System.Threading.Tasks.Task<int> AddGroupCharacterAsync(WpfApp.ServiceWcfHost.GroupCharacter model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/AddCredit", ReplyAction="http://WcfHost/Service/Service/AddCreditResponse")]
        int AddCredit(WpfApp.ServiceWcfHost.Credit model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/AddCredit", ReplyAction="http://WcfHost/Service/Service/AddCreditResponse")]
        System.Threading.Tasks.Task<int> AddCreditAsync(WpfApp.ServiceWcfHost.Credit model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/AddPayment", ReplyAction="http://WcfHost/Service/Service/AddPaymentResponse")]
        int AddPayment(WpfApp.ServiceWcfHost.Payment model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/AddPayment", ReplyAction="http://WcfHost/Service/Service/AddPaymentResponse")]
        System.Threading.Tasks.Task<int> AddPaymentAsync(WpfApp.ServiceWcfHost.Payment model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/AddConditionCredit", ReplyAction="http://WcfHost/Service/Service/AddConditionCreditResponse")]
        int AddConditionCredit(WpfApp.ServiceWcfHost.ConditionCredit model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/AddConditionCredit", ReplyAction="http://WcfHost/Service/Service/AddConditionCreditResponse")]
        System.Threading.Tasks.Task<int> AddConditionCreditAsync(WpfApp.ServiceWcfHost.ConditionCredit model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/DeleteUser", ReplyAction="http://WcfHost/Service/Service/DeleteUserResponse")]
        bool DeleteUser(WpfApp.ServiceWcfHost.User model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/DeleteUser", ReplyAction="http://WcfHost/Service/Service/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(WpfApp.ServiceWcfHost.User model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/DeleteGroupCreditWorthiness", ReplyAction="http://WcfHost/Service/Service/DeleteGroupCreditWorthinessResponse")]
        bool DeleteGroupCreditWorthiness(WpfApp.ServiceWcfHost.GroupCreditWorthiness model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/DeleteGroupCreditWorthiness", ReplyAction="http://WcfHost/Service/Service/DeleteGroupCreditWorthinessResponse")]
        System.Threading.Tasks.Task<bool> DeleteGroupCreditWorthinessAsync(WpfApp.ServiceWcfHost.GroupCreditWorthiness model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/DeleteGroupCharacter", ReplyAction="http://WcfHost/Service/Service/DeleteGroupCharacterResponse")]
        bool DeleteGroupCharacter(WpfApp.ServiceWcfHost.GroupCharacter model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/DeleteGroupCharacter", ReplyAction="http://WcfHost/Service/Service/DeleteGroupCharacterResponse")]
        System.Threading.Tasks.Task<bool> DeleteGroupCharacterAsync(WpfApp.ServiceWcfHost.GroupCharacter model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/DeleteCredit", ReplyAction="http://WcfHost/Service/Service/DeleteCreditResponse")]
        bool DeleteCredit(WpfApp.ServiceWcfHost.Credit model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/DeleteCredit", ReplyAction="http://WcfHost/Service/Service/DeleteCreditResponse")]
        System.Threading.Tasks.Task<bool> DeleteCreditAsync(WpfApp.ServiceWcfHost.Credit model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/UpdateUser", ReplyAction="http://WcfHost/Service/Service/UpdateUserResponse")]
        bool UpdateUser(WpfApp.ServiceWcfHost.User model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/UpdateUser", ReplyAction="http://WcfHost/Service/Service/UpdateUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserAsync(WpfApp.ServiceWcfHost.User model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/UpdateGroupCreditWorthiness", ReplyAction="http://WcfHost/Service/Service/UpdateGroupCreditWorthinessResponse")]
        bool UpdateGroupCreditWorthiness(WpfApp.ServiceWcfHost.GroupCreditWorthiness model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/UpdateGroupCreditWorthiness", ReplyAction="http://WcfHost/Service/Service/UpdateGroupCreditWorthinessResponse")]
        System.Threading.Tasks.Task<bool> UpdateGroupCreditWorthinessAsync(WpfApp.ServiceWcfHost.GroupCreditWorthiness model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/UpdateGroupCharacter", ReplyAction="http://WcfHost/Service/Service/UpdateGroupCharacterResponse")]
        bool UpdateGroupCharacter(WpfApp.ServiceWcfHost.GroupCharacter model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/UpdateGroupCharacter", ReplyAction="http://WcfHost/Service/Service/UpdateGroupCharacterResponse")]
        System.Threading.Tasks.Task<bool> UpdateGroupCharacterAsync(WpfApp.ServiceWcfHost.GroupCharacter model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/UpdateCredit", ReplyAction="http://WcfHost/Service/Service/UpdateCreditResponse")]
        bool UpdateCredit(WpfApp.ServiceWcfHost.Credit model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/UpdateCredit", ReplyAction="http://WcfHost/Service/Service/UpdateCreditResponse")]
        System.Threading.Tasks.Task<bool> UpdateCreditAsync(WpfApp.ServiceWcfHost.Credit model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/UpdatePayment", ReplyAction="http://WcfHost/Service/Service/UpdatePaymentResponse")]
        bool UpdatePayment(WpfApp.ServiceWcfHost.Payment model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/UpdatePayment", ReplyAction="http://WcfHost/Service/Service/UpdatePaymentResponse")]
        System.Threading.Tasks.Task<bool> UpdatePaymentAsync(WpfApp.ServiceWcfHost.Payment model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/IsHasGroupByGroupName", ReplyAction="http://WcfHost/Service/Service/IsHasGroupByGroupNameResponse")]
        bool IsHasGroupByGroupName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/IsHasGroupByGroupName", ReplyAction="http://WcfHost/Service/Service/IsHasGroupByGroupNameResponse")]
        System.Threading.Tasks.Task<bool> IsHasGroupByGroupNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/AlgorirmForGroup", ReplyAction="http://WcfHost/Service/Service/AlgorirmForGroupResponse")]
        WpfApp.ServiceWcfHost.GroupCharacter[] AlgorirmForGroup(int revenueYear, string sex, int age, int children, string married);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/AlgorirmForGroup", ReplyAction="http://WcfHost/Service/Service/AlgorirmForGroupResponse")]
        System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.GroupCharacter[]> AlgorirmForGroupAsync(int revenueYear, string sex, int age, int children, string married);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/AlgoritmEconomicValue", ReplyAction="http://WcfHost/Service/Service/AlgoritmEconomicValueResponse")]
        int[] AlgoritmEconomicValue(int revenueMonth, int month, int stavka);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/AlgoritmEconomicValue", ReplyAction="http://WcfHost/Service/Service/AlgoritmEconomicValueResponse")]
        System.Threading.Tasks.Task<int[]> AlgoritmEconomicValueAsync(int revenueMonth, int month, int stavka);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/AlgoritmMonthPay", ReplyAction="http://WcfHost/Service/Service/AlgoritmMonthPayResponse")]
        int AlgoritmMonthPay(int summa, int stavka, int month);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/AlgoritmMonthPay", ReplyAction="http://WcfHost/Service/Service/AlgoritmMonthPayResponse")]
        System.Threading.Tasks.Task<int> AlgoritmMonthPayAsync(int summa, int stavka, int month);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/CalculationPayment", ReplyAction="http://WcfHost/Service/Service/CalculationPaymentResponse")]
        WpfApp.ServiceWcfHost.Payment[] CalculationPayment(int summaFull, int summaMonth, int stavka, int month, System.DateTime data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/CalculationPayment", ReplyAction="http://WcfHost/Service/Service/CalculationPaymentResponse")]
        System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.Payment[]> CalculationPaymentAsync(int summaFull, int summaMonth, int stavka, int month, System.DateTime data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/SearchPayment", ReplyAction="http://WcfHost/Service/Service/SearchPaymentResponse")]
        WpfApp.ServiceWcfHost.Payment SearchPayment(int idCredit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/SearchPayment", ReplyAction="http://WcfHost/Service/Service/SearchPaymentResponse")]
        System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.Payment> SearchPaymentAsync(int idCredit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetCountCredit", ReplyAction="http://WcfHost/Service/Service/GetCountCreditResponse")]
        int GetCountCredit(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetCountCredit", ReplyAction="http://WcfHost/Service/Service/GetCountCreditResponse")]
        System.Threading.Tasks.Task<int> GetCountCreditAsync(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetFullSummaCredits", ReplyAction="http://WcfHost/Service/Service/GetFullSummaCreditsResponse")]
        int GetFullSummaCredits(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetFullSummaCredits", ReplyAction="http://WcfHost/Service/Service/GetFullSummaCreditsResponse")]
        System.Threading.Tasks.Task<int> GetFullSummaCreditsAsync(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetLostSummaCredits", ReplyAction="http://WcfHost/Service/Service/GetLostSummaCreditsResponse")]
        int GetLostSummaCredits(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WcfHost/Service/Service/GetLostSummaCredits", ReplyAction="http://WcfHost/Service/Service/GetLostSummaCreditsResponse")]
        System.Threading.Tasks.Task<int> GetLostSummaCreditsAsync(int idUser);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceChannel : WpfApp.ServiceWcfHost.Service, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<WpfApp.ServiceWcfHost.Service>, WpfApp.ServiceWcfHost.Service {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WpfApp.ServiceWcfHost.Condition[] GetConditions() {
            return base.Channel.GetConditions();
        }
        
        public System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.Condition[]> GetConditionsAsync() {
            return base.Channel.GetConditionsAsync();
        }
        
        public WpfApp.ServiceWcfHost.ConditionCredit[] GetConditionCredits() {
            return base.Channel.GetConditionCredits();
        }
        
        public System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.ConditionCredit[]> GetConditionCreditsAsync() {
            return base.Channel.GetConditionCreditsAsync();
        }
        
        public WpfApp.ServiceWcfHost.ConditionCredit[] GetConditionCreditsByIdCredits(int idCredit) {
            return base.Channel.GetConditionCreditsByIdCredits(idCredit);
        }
        
        public System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.ConditionCredit[]> GetConditionCreditsByIdCreditsAsync(int idCredit) {
            return base.Channel.GetConditionCreditsByIdCreditsAsync(idCredit);
        }
        
        public WpfApp.ServiceWcfHost.Payment[] GetPayments() {
            return base.Channel.GetPayments();
        }
        
        public System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.Payment[]> GetPaymentsAsync() {
            return base.Channel.GetPaymentsAsync();
        }
        
        public WpfApp.ServiceWcfHost.Payment[] GetPaymentsByIdCredit(int idCredit) {
            return base.Channel.GetPaymentsByIdCredit(idCredit);
        }
        
        public System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.Payment[]> GetPaymentsByIdCreditAsync(int idCredit) {
            return base.Channel.GetPaymentsByIdCreditAsync(idCredit);
        }
        
        public WpfApp.ServiceWcfHost.Credit[] GetCredits() {
            return base.Channel.GetCredits();
        }
        
        public System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.Credit[]> GetCreditsAsync() {
            return base.Channel.GetCreditsAsync();
        }
        
        public WpfApp.ServiceWcfHost.Credit[] GetCreditsByIdUser(int idUser) {
            return base.Channel.GetCreditsByIdUser(idUser);
        }
        
        public System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.Credit[]> GetCreditsByIdUserAsync(int idUser) {
            return base.Channel.GetCreditsByIdUserAsync(idUser);
        }
        
        public WpfApp.ServiceWcfHost.Credit FirstCredit(int id) {
            return base.Channel.FirstCredit(id);
        }
        
        public System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.Credit> FirstCreditAsync(int id) {
            return base.Channel.FirstCreditAsync(id);
        }
        
        public WpfApp.ServiceWcfHost.User[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.User[]> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public WpfApp.ServiceWcfHost.User FirstUser(int id) {
            return base.Channel.FirstUser(id);
        }
        
        public System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.User> FirstUserAsync(int id) {
            return base.Channel.FirstUserAsync(id);
        }
        
        public WpfApp.ServiceWcfHost.GroupCharacter[] GetGroupCharacters() {
            return base.Channel.GetGroupCharacters();
        }
        
        public System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.GroupCharacter[]> GetGroupCharactersAsync() {
            return base.Channel.GetGroupCharactersAsync();
        }
        
        public WpfApp.ServiceWcfHost.GroupCreditWorthiness[] GetGroupCreditWorthinesss() {
            return base.Channel.GetGroupCreditWorthinesss();
        }
        
        public System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.GroupCreditWorthiness[]> GetGroupCreditWorthinesssAsync() {
            return base.Channel.GetGroupCreditWorthinesssAsync();
        }
        
        public WpfApp.ServiceWcfHost.GroupCreditWorthiness FirstGroupCreditWorthiness(int id) {
            return base.Channel.FirstGroupCreditWorthiness(id);
        }
        
        public System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.GroupCreditWorthiness> FirstGroupCreditWorthinessAsync(int id) {
            return base.Channel.FirstGroupCreditWorthinessAsync(id);
        }
        
        public WpfApp.ServiceWcfHost.GroupCreditWorthiness FirstGroupCreditWorthinessByName(string name) {
            return base.Channel.FirstGroupCreditWorthinessByName(name);
        }
        
        public System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.GroupCreditWorthiness> FirstGroupCreditWorthinessByNameAsync(string name) {
            return base.Channel.FirstGroupCreditWorthinessByNameAsync(name);
        }
        
        public int AddUser(WpfApp.ServiceWcfHost.User model) {
            return base.Channel.AddUser(model);
        }
        
        public System.Threading.Tasks.Task<int> AddUserAsync(WpfApp.ServiceWcfHost.User model) {
            return base.Channel.AddUserAsync(model);
        }
        
        public int AddGroupCreditWorthiness(WpfApp.ServiceWcfHost.GroupCreditWorthiness model) {
            return base.Channel.AddGroupCreditWorthiness(model);
        }
        
        public System.Threading.Tasks.Task<int> AddGroupCreditWorthinessAsync(WpfApp.ServiceWcfHost.GroupCreditWorthiness model) {
            return base.Channel.AddGroupCreditWorthinessAsync(model);
        }
        
        public int AddGroupCharacter(WpfApp.ServiceWcfHost.GroupCharacter model) {
            return base.Channel.AddGroupCharacter(model);
        }
        
        public System.Threading.Tasks.Task<int> AddGroupCharacterAsync(WpfApp.ServiceWcfHost.GroupCharacter model) {
            return base.Channel.AddGroupCharacterAsync(model);
        }
        
        public int AddCredit(WpfApp.ServiceWcfHost.Credit model) {
            return base.Channel.AddCredit(model);
        }
        
        public System.Threading.Tasks.Task<int> AddCreditAsync(WpfApp.ServiceWcfHost.Credit model) {
            return base.Channel.AddCreditAsync(model);
        }
        
        public int AddPayment(WpfApp.ServiceWcfHost.Payment model) {
            return base.Channel.AddPayment(model);
        }
        
        public System.Threading.Tasks.Task<int> AddPaymentAsync(WpfApp.ServiceWcfHost.Payment model) {
            return base.Channel.AddPaymentAsync(model);
        }
        
        public int AddConditionCredit(WpfApp.ServiceWcfHost.ConditionCredit model) {
            return base.Channel.AddConditionCredit(model);
        }
        
        public System.Threading.Tasks.Task<int> AddConditionCreditAsync(WpfApp.ServiceWcfHost.ConditionCredit model) {
            return base.Channel.AddConditionCreditAsync(model);
        }
        
        public bool DeleteUser(WpfApp.ServiceWcfHost.User model) {
            return base.Channel.DeleteUser(model);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(WpfApp.ServiceWcfHost.User model) {
            return base.Channel.DeleteUserAsync(model);
        }
        
        public bool DeleteGroupCreditWorthiness(WpfApp.ServiceWcfHost.GroupCreditWorthiness model) {
            return base.Channel.DeleteGroupCreditWorthiness(model);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteGroupCreditWorthinessAsync(WpfApp.ServiceWcfHost.GroupCreditWorthiness model) {
            return base.Channel.DeleteGroupCreditWorthinessAsync(model);
        }
        
        public bool DeleteGroupCharacter(WpfApp.ServiceWcfHost.GroupCharacter model) {
            return base.Channel.DeleteGroupCharacter(model);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteGroupCharacterAsync(WpfApp.ServiceWcfHost.GroupCharacter model) {
            return base.Channel.DeleteGroupCharacterAsync(model);
        }
        
        public bool DeleteCredit(WpfApp.ServiceWcfHost.Credit model) {
            return base.Channel.DeleteCredit(model);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCreditAsync(WpfApp.ServiceWcfHost.Credit model) {
            return base.Channel.DeleteCreditAsync(model);
        }
        
        public bool UpdateUser(WpfApp.ServiceWcfHost.User model) {
            return base.Channel.UpdateUser(model);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserAsync(WpfApp.ServiceWcfHost.User model) {
            return base.Channel.UpdateUserAsync(model);
        }
        
        public bool UpdateGroupCreditWorthiness(WpfApp.ServiceWcfHost.GroupCreditWorthiness model) {
            return base.Channel.UpdateGroupCreditWorthiness(model);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateGroupCreditWorthinessAsync(WpfApp.ServiceWcfHost.GroupCreditWorthiness model) {
            return base.Channel.UpdateGroupCreditWorthinessAsync(model);
        }
        
        public bool UpdateGroupCharacter(WpfApp.ServiceWcfHost.GroupCharacter model) {
            return base.Channel.UpdateGroupCharacter(model);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateGroupCharacterAsync(WpfApp.ServiceWcfHost.GroupCharacter model) {
            return base.Channel.UpdateGroupCharacterAsync(model);
        }
        
        public bool UpdateCredit(WpfApp.ServiceWcfHost.Credit model) {
            return base.Channel.UpdateCredit(model);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCreditAsync(WpfApp.ServiceWcfHost.Credit model) {
            return base.Channel.UpdateCreditAsync(model);
        }
        
        public bool UpdatePayment(WpfApp.ServiceWcfHost.Payment model) {
            return base.Channel.UpdatePayment(model);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePaymentAsync(WpfApp.ServiceWcfHost.Payment model) {
            return base.Channel.UpdatePaymentAsync(model);
        }
        
        public bool IsHasGroupByGroupName(string name) {
            return base.Channel.IsHasGroupByGroupName(name);
        }
        
        public System.Threading.Tasks.Task<bool> IsHasGroupByGroupNameAsync(string name) {
            return base.Channel.IsHasGroupByGroupNameAsync(name);
        }
        
        public WpfApp.ServiceWcfHost.GroupCharacter[] AlgorirmForGroup(int revenueYear, string sex, int age, int children, string married) {
            return base.Channel.AlgorirmForGroup(revenueYear, sex, age, children, married);
        }
        
        public System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.GroupCharacter[]> AlgorirmForGroupAsync(int revenueYear, string sex, int age, int children, string married) {
            return base.Channel.AlgorirmForGroupAsync(revenueYear, sex, age, children, married);
        }
        
        public int[] AlgoritmEconomicValue(int revenueMonth, int month, int stavka) {
            return base.Channel.AlgoritmEconomicValue(revenueMonth, month, stavka);
        }
        
        public System.Threading.Tasks.Task<int[]> AlgoritmEconomicValueAsync(int revenueMonth, int month, int stavka) {
            return base.Channel.AlgoritmEconomicValueAsync(revenueMonth, month, stavka);
        }
        
        public int AlgoritmMonthPay(int summa, int stavka, int month) {
            return base.Channel.AlgoritmMonthPay(summa, stavka, month);
        }
        
        public System.Threading.Tasks.Task<int> AlgoritmMonthPayAsync(int summa, int stavka, int month) {
            return base.Channel.AlgoritmMonthPayAsync(summa, stavka, month);
        }
        
        public WpfApp.ServiceWcfHost.Payment[] CalculationPayment(int summaFull, int summaMonth, int stavka, int month, System.DateTime data) {
            return base.Channel.CalculationPayment(summaFull, summaMonth, stavka, month, data);
        }
        
        public System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.Payment[]> CalculationPaymentAsync(int summaFull, int summaMonth, int stavka, int month, System.DateTime data) {
            return base.Channel.CalculationPaymentAsync(summaFull, summaMonth, stavka, month, data);
        }
        
        public WpfApp.ServiceWcfHost.Payment SearchPayment(int idCredit) {
            return base.Channel.SearchPayment(idCredit);
        }
        
        public System.Threading.Tasks.Task<WpfApp.ServiceWcfHost.Payment> SearchPaymentAsync(int idCredit) {
            return base.Channel.SearchPaymentAsync(idCredit);
        }
        
        public int GetCountCredit(int idUser) {
            return base.Channel.GetCountCredit(idUser);
        }
        
        public System.Threading.Tasks.Task<int> GetCountCreditAsync(int idUser) {
            return base.Channel.GetCountCreditAsync(idUser);
        }
        
        public int GetFullSummaCredits(int idUser) {
            return base.Channel.GetFullSummaCredits(idUser);
        }
        
        public System.Threading.Tasks.Task<int> GetFullSummaCreditsAsync(int idUser) {
            return base.Channel.GetFullSummaCreditsAsync(idUser);
        }
        
        public int GetLostSummaCredits(int idUser) {
            return base.Channel.GetLostSummaCredits(idUser);
        }
        
        public System.Threading.Tasks.Task<int> GetLostSummaCreditsAsync(int idUser) {
            return base.Channel.GetLostSummaCreditsAsync(idUser);
        }
    }
}
